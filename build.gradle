buildscript {
    repositories {
        mavenLocal()

        jcenter()
        maven {
            name 'Bintray Asciidoctor repo'
            url 'http://dl.bintray.com/content/aalmiray/asciidoctor'
        }
        maven {
            name 'Bintray Javadoc Hotfix repo'
            url 'http://dl.bintray.com/melix/gradle-javadoc-hotfix-plugin'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        maven {
            name 'JFrog OSS snapshot repo'
            url 'https://oss.jfrog.org/oss-snapshot-local/'
        }

        mavenCentral()
    }

    dependencies {
        classpath files("lib/antlr4-gradle-plugin-0.1.2-SNAPSHOT.jar");
    }
}


group 'org.codehaus.groovy'
version '2.5.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'me.champeau.gradle.antlr4'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6



repositories {
    mavenLocal()

    jcenter()
    maven {
        name 'Bintray Asciidoctor repo'
        url 'http://dl.bintray.com/content/aalmiray/asciidoctor'
    }
    maven {
        name 'Bintray Javadoc Hotfix repo'
        url 'http://dl.bintray.com/melix/gradle-javadoc-hotfix-plugin'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }

    maven {
        name 'JFrog OSS snapshot repo'
        url 'https://oss.jfrog.org/oss-snapshot-local/'
    }

    mavenCentral()
}


def srcBase = "src"
def srcMain = "$srcBase/main"
def antlr4Source = "$srcMain/antlr4"
def antlr4Output = "$srcMain/generated-sources/org/codehaus/groovy/parser/antlr4"

// set package for antlr generated classes
antlr4 {
    source = file(antlr4Source)
    extraArgs = ["-package", "org.codehaus.groovy.parser.antlr4"]
    output = file(antlr4Output)
}

compileJava.options.encoding = 'UTF-8'

// make the Java compile task depend on the antlr4 task
compileJava.dependsOn antlr4

// add antlr4 to classpath
configurations {
    compile.extendsFrom antlr4
}

ext {
    asmVersion = '5.0.3'
    spockVersion = '1.0-groovy-2.4'
    antlr4Version = '4.5.3'
    groovyVersion = '2.5.0-SNAPSHOT'
}

dependencies {
    antlr4 "com.tunnelvisionlabs:antlr4:$antlr4Version"

    compile "org.ow2.asm:asm:$asmVersion"
    compile "org.ow2.asm:asm-analysis:$asmVersion"
    compile "org.ow2.asm:asm-commons:$asmVersion"
    compile "org.ow2.asm:asm-tree:$asmVersion"
    compile "org.ow2.asm:asm-util:$asmVersion"

    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude module: 'groovy-all'
    }
}

// add the generated source files to the list of java sources
sourceSets.main.java.srcDirs += file("$srcMain/generated-sources"); //antlr4.output
sourceSets.main.resources.srcDirs += file("$srcMain/antlr4");
sourceSets.main.java.srcDirs += file("$srcMain/groovy-sources");


test {
	  if (JavaVersion.current().isJava8Compatible()) {
	      jvmArgs '-ea', "-Xms256m", "-Xmx512m"
	  } else {
	      jvmArgs '-ea', "-Xms256m", "-Xmx512m", "-XX:PermSize=64m", "-XX:MaxPermSize=192m"
	  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
